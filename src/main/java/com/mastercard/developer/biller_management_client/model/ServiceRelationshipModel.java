/*
 * Bill Pay Exchange Biller Management API
 * Biller Management Service
 *
 * OpenAPI spec version: 1.0.0
 * Contact: Bill_Pay_Development_Support@mastercard.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.mastercard.developer.biller_management_client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

import java.util.Objects;

/**
 * Biller Service Relationships Detail Model,
 */
@ApiModel(description = "Biller Service Relationships Detail Model,")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2020-01-30T10:30:57.815-06:00[America/Chicago]")
public class ServiceRelationshipModel {
  public static final String SERIALIZED_NAME_RECORD_ACTION = "recordAction";
  @SerializedName(SERIALIZED_NAME_RECORD_ACTION)
  private String recordAction;

  public static final String SERIALIZED_NAME_BSP_ID = "bspId";
  @SerializedName(SERIALIZED_NAME_BSP_ID)
  private String bspId;

  public static final String SERIALIZED_NAME_SERVICE_TYPE = "serviceType";
  @SerializedName(SERIALIZED_NAME_SERVICE_TYPE)
  private String serviceType;

  public ServiceRelationshipModel recordAction(String recordAction) {
    this.recordAction = recordAction;
    return this;
  }

   /**
   * Record Action, avaliable values are: Add, Delete and Update, only required when Biller action is &#39;Update&#39;
   * @return recordAction
  **/
  @ApiModelProperty(example = "Add", value = "Record Action, avaliable values are: Add, Delete and Update, only required when Biller action is 'Update'")
  public String getRecordAction() {
    return recordAction;
  }

  public void setRecordAction(String recordAction) {
    this.recordAction = recordAction;
  }

  public ServiceRelationshipModel bspId(String bspId) {
    this.bspId = bspId;
    return this;
  }

   /**
   * BSP ID, 6 digit numeric value
   * @return bspId
  **/
  @ApiModelProperty(example = "000123", required = true, value = "BSP ID, 6 digit numeric value")
  public String getBspId() {
    return bspId;
  }

  public void setBspId(String bspId) {
    this.bspId = bspId;
  }

  public ServiceRelationshipModel serviceType(String serviceType) {
    this.serviceType = serviceType;
    return this;
  }

   /**
   * Biller Service Type, avaliable values are: BPX_CL_EB_PAYC, BPX_CL_EB, BPX_CL
   * @return serviceType
  **/
  @ApiModelProperty(example = "BPX_CL_EB_PAYC", required = true, value = "Biller Service Type, avaliable values are: BPX_CL_EB_PAYC, BPX_CL_EB, BPX_CL")
  public String getServiceType() {
    return serviceType;
  }

  public void setServiceType(String serviceType) {
    this.serviceType = serviceType;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ServiceRelationshipModel serviceRelationshipModel = (ServiceRelationshipModel) o;
    return Objects.equals(this.recordAction, serviceRelationshipModel.recordAction) &&
        Objects.equals(this.bspId, serviceRelationshipModel.bspId) &&
        Objects.equals(this.serviceType, serviceRelationshipModel.serviceType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(recordAction, bspId, serviceType);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ServiceRelationshipModel {\n");

    sb.append("    recordAction: ").append(toIndentedString(recordAction)).append("\n");
    sb.append("    bspId: ").append(toIndentedString(bspId)).append("\n");
    sb.append("    serviceType: ").append(toIndentedString(serviceType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

